buildscript {
  ext {
    springBootVersion = '1.2.1.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

jar {
  baseName = 'cudu'
  version =  '2.0.8'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
}

configurations {
  providedRuntime
  jpaMetaModel
}

dependencies {
  compile("org.springframework.boot:spring-boot-starter-security")
  compile("org.springframework.boot:spring-boot-starter-actuator")
  compile("org.springframework.boot:spring-boot-starter-data-jpa")
  compile("org.springframework.boot:spring-boot-starter-web")
  compile("org.springframework.boot:spring-boot-starter-thymeleaf")
  compile("org.springframework.boot:spring-boot-starter-mail")

  compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
  compile("com.fasterxml.jackson.datatype:jackson-datatype-hibernate4:2.4.4")


  compile("com.google.guava:guava:18.0")

  compile("com.h2database:h2")
  compile("org.hibernate:hibernate-validator")
  compile("org.postgresql:postgresql:9.3-1102-jdbc41")

  jpaMetaModel("org.hibernate:hibernate-jpamodelgen")

  testCompile("org.springframework.boot:spring-boot-starter-test")
}

sourceSets {
  generated.java.srcDirs = ['generated/src/main/java']
  main {
    java {
      srcDir 'generated/src/main/java'
      srcDir 'src/main/java'
    }
  }
}

clean {
  delete "generated"
}

task generateJpaMetaModel(type: JavaCompile, group: 'build', description: 'JPA MetaModel Generation') {
  source = sourceSets.main.java
  classpath = configurations.compile + configurations.jpaMetaModel
  options.compilerArgs = ["-proc:only"]
  destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava.dependsOn generateJpaMetaModel
ideaProject.dependsOn generateJpaMetaModel
compileJava.source sourceSets.generated.java, sourceSets.main.java

task wrapper(type: Wrapper) {
  gradleVersion = '2.2.1'
}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
  project {
    vcs = 'Git'
  }
}

eclipse {
  classpath {
    containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
    containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
  }
}
