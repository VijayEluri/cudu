/**
 * This class is generated by jOOQ
 */
package org.scoutsfev.cudu.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.scoutsfev.cudu.db.tables.Ronda;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RondaRecord extends UpdatableRecordImpl<RondaRecord> implements Record3<Short, String, Object> {

	private static final long serialVersionUID = 1150966251;

	/**
	 * Setter for <code>public.ronda.id</code>.
	 */
	public void setId(Short value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.ronda.id</code>.
	 */
	public Short getId() {
		return (Short) getValue(0);
	}

	/**
	 * Setter for <code>public.ronda.etiqueta</code>.
	 */
	public void setEtiqueta(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.ronda.etiqueta</code>.
	 */
	public String getEtiqueta() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.ronda.rango</code>.
	 */
	public void setRango(Object value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.ronda.rango</code>.
	 */
	public Object getRango() {
		return (Object) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Short> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Short, String, Object> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Short, String, Object> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field1() {
		return Ronda.RONDA.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Ronda.RONDA.ETIQUETA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Object> field3() {
		return Ronda.RONDA.RANGO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getEtiqueta();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object value3() {
		return getRango();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RondaRecord value1(Short value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RondaRecord value2(String value) {
		setEtiqueta(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RondaRecord value3(Object value) {
		setRango(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RondaRecord values(Short value1, String value2, Object value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached RondaRecord
	 */
	public RondaRecord() {
		super(Ronda.RONDA);
	}

	/**
	 * Create a detached, initialised RondaRecord
	 */
	public RondaRecord(Short id, String etiqueta, Object rango) {
		super(Ronda.RONDA);

		setValue(0, id);
		setValue(1, etiqueta);
		setValue(2, rango);
	}
}
