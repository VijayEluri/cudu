/**
 * This class is generated by jOOQ
 */
package org.scoutsfev.cudu.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.scoutsfev.cudu.db.Keys;
import org.scoutsfev.cudu.db.Public;
import org.scoutsfev.cudu.db.tables.records.AsistenteActividadRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AsistenteActividad extends TableImpl<AsistenteActividadRecord> {

	private static final long serialVersionUID = -1605763397;

	/**
	 * The reference instance of <code>public.asistente_actividad</code>
	 */
	public static final AsistenteActividad ASISTENTE_ACTIVIDAD = new AsistenteActividad();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AsistenteActividadRecord> getRecordType() {
		return AsistenteActividadRecord.class;
	}

	/**
	 * The column <code>public.asistente_actividad.actividad_id</code>.
	 */
	public final TableField<AsistenteActividadRecord, Integer> ACTIVIDAD_ID = createField("actividad_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.asistente_actividad.asociado_id</code>.
	 */
	public final TableField<AsistenteActividadRecord, Integer> ASOCIADO_ID = createField("asociado_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.asistente_actividad.estado</code>.
	 */
	public final TableField<AsistenteActividadRecord, String> ESTADO = createField("estado", org.jooq.impl.SQLDataType.CHAR.length(1).nullable(false), this, "");

	/**
	 * Create a <code>public.asistente_actividad</code> table reference
	 */
	public AsistenteActividad() {
		this("asistente_actividad", null);
	}

	/**
	 * Create an aliased <code>public.asistente_actividad</code> table reference
	 */
	public AsistenteActividad(String alias) {
		this(alias, ASISTENTE_ACTIVIDAD);
	}

	private AsistenteActividad(String alias, Table<AsistenteActividadRecord> aliased) {
		this(alias, aliased, null);
	}

	private AsistenteActividad(String alias, Table<AsistenteActividadRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AsistenteActividadRecord> getPrimaryKey() {
		return Keys.ASISTENTE_ACTIVIDAD_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AsistenteActividadRecord>> getKeys() {
		return Arrays.<UniqueKey<AsistenteActividadRecord>>asList(Keys.ASISTENTE_ACTIVIDAD_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<AsistenteActividadRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<AsistenteActividadRecord, ?>>asList(Keys.ASISTENTE_ACTIVIDAD__ASISTENTE_ACTIVIDAD_ACTIVIDAD_ID_FKEY, Keys.ASISTENTE_ACTIVIDAD__ASISTENTE_ACTIVIDAD_ASOCIADO_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AsistenteActividad as(String alias) {
		return new AsistenteActividad(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AsistenteActividad rename(String name) {
		return new AsistenteActividad(name, null);
	}
}
