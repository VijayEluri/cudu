/**
 * This class is generated by jOOQ
 */
package org.scoutsfev.cudu.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.scoutsfev.cudu.db.Keys;
import org.scoutsfev.cudu.db.Public;
import org.scoutsfev.cudu.db.tables.records.CursoFormadorRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CursoFormador extends TableImpl<CursoFormadorRecord> {

	private static final long serialVersionUID = -1981421758;

	/**
	 * The reference instance of <code>public.curso_formador</code>
	 */
	public static final CursoFormador CURSO_FORMADOR = new CursoFormador();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CursoFormadorRecord> getRecordType() {
		return CursoFormadorRecord.class;
	}

	/**
	 * The column <code>public.curso_formador.curso_id</code>.
	 */
	public final TableField<CursoFormadorRecord, Integer> CURSO_ID = createField("curso_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.curso_formador.asociado_id</code>.
	 */
	public final TableField<CursoFormadorRecord, Integer> ASOCIADO_ID = createField("asociado_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>public.curso_formador</code> table reference
	 */
	public CursoFormador() {
		this("curso_formador", null);
	}

	/**
	 * Create an aliased <code>public.curso_formador</code> table reference
	 */
	public CursoFormador(String alias) {
		this(alias, CURSO_FORMADOR);
	}

	private CursoFormador(String alias, Table<CursoFormadorRecord> aliased) {
		this(alias, aliased, null);
	}

	private CursoFormador(String alias, Table<CursoFormadorRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CursoFormadorRecord> getPrimaryKey() {
		return Keys.PK_CURSO_FORMADOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CursoFormadorRecord>> getKeys() {
		return Arrays.<UniqueKey<CursoFormadorRecord>>asList(Keys.PK_CURSO_FORMADOR);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<CursoFormadorRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<CursoFormadorRecord, ?>>asList(Keys.CURSO_FORMADOR__FK_CURSO_FORMADOR_CURSO, Keys.CURSO_FORMADOR__FK_CURSO_FORMADOR_FORMADOR);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CursoFormador as(String alias) {
		return new CursoFormador(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CursoFormador rename(String name) {
		return new CursoFormador(name, null);
	}
}
