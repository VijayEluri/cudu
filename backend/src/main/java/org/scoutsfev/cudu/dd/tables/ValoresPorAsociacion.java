/**
 * This class is generated by jOOQ
 */
package org.scoutsfev.cudu.dd.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.scoutsfev.cudu.dd.Public;
import org.scoutsfev.cudu.dd.tables.records.ValoresPorAsociacionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ValoresPorAsociacion extends TableImpl<ValoresPorAsociacionRecord> {

	private static final long serialVersionUID = -586667571;

	/**
	 * The reference instance of <code>public.valores_por_asociacion</code>
	 */
	public static final ValoresPorAsociacion VALORES_POR_ASOCIACION = new ValoresPorAsociacion();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ValoresPorAsociacionRecord> getRecordType() {
		return ValoresPorAsociacionRecord.class;
	}

	/**
	 * The column <code>public.valores_por_asociacion.ambito</code>.
	 */
	public final TableField<ValoresPorAsociacionRecord, String> AMBITO = createField("ambito", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.valores_por_asociacion.especificidad</code>.
	 */
	public final TableField<ValoresPorAsociacionRecord, Integer> ESPECIFICIDAD = createField("especificidad", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.valores_por_asociacion.joven</code>.
	 */
	public final TableField<ValoresPorAsociacionRecord, Long> JOVEN = createField("joven", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>public.valores_por_asociacion.kraal</code>.
	 */
	public final TableField<ValoresPorAsociacionRecord, Long> KRAAL = createField("kraal", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>public.valores_por_asociacion.comite</code>.
	 */
	public final TableField<ValoresPorAsociacionRecord, Long> COMITE = createField("comite", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>public.valores_por_asociacion.colonia</code>.
	 */
	public final TableField<ValoresPorAsociacionRecord, Long> COLONIA = createField("colonia", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>public.valores_por_asociacion.manada</code>.
	 */
	public final TableField<ValoresPorAsociacionRecord, Long> MANADA = createField("manada", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>public.valores_por_asociacion.exploradores</code>.
	 */
	public final TableField<ValoresPorAsociacionRecord, Long> EXPLORADORES = createField("exploradores", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>public.valores_por_asociacion.expedicion</code>.
	 */
	public final TableField<ValoresPorAsociacionRecord, Long> EXPEDICION = createField("expedicion", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>public.valores_por_asociacion.ruta</code>.
	 */
	public final TableField<ValoresPorAsociacionRecord, Long> RUTA = createField("ruta", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>public.valores_por_asociacion.total</code>.
	 */
	public final TableField<ValoresPorAsociacionRecord, Long> TOTAL = createField("total", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>public.valores_por_asociacion.asociacionid</code>.
	 */
	public final TableField<ValoresPorAsociacionRecord, Integer> ASOCIACIONID = createField("asociacionid", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>public.valores_por_asociacion</code> table reference
	 */
	public ValoresPorAsociacion() {
		this("valores_por_asociacion", null);
	}

	/**
	 * Create an aliased <code>public.valores_por_asociacion</code> table reference
	 */
	public ValoresPorAsociacion(String alias) {
		this(alias, VALORES_POR_ASOCIACION);
	}

	private ValoresPorAsociacion(String alias, Table<ValoresPorAsociacionRecord> aliased) {
		this(alias, aliased, null);
	}

	private ValoresPorAsociacion(String alias, Table<ValoresPorAsociacionRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ValoresPorAsociacion as(String alias) {
		return new ValoresPorAsociacion(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ValoresPorAsociacion rename(String name) {
		return new ValoresPorAsociacion(name, null);
	}
}
