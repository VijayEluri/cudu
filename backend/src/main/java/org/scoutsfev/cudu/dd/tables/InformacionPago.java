/**
 * This class is generated by jOOQ
 */
package org.scoutsfev.cudu.dd.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.scoutsfev.cudu.dd.Keys;
import org.scoutsfev.cudu.dd.Public;
import org.scoutsfev.cudu.dd.tables.records.InformacionPagoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InformacionPago extends TableImpl<InformacionPagoRecord> {

	private static final long serialVersionUID = -1640981228;

	/**
	 * The reference instance of <code>public.informacion_pago</code>
	 */
	public static final InformacionPago INFORMACION_PAGO = new InformacionPago();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<InformacionPagoRecord> getRecordType() {
		return InformacionPagoRecord.class;
	}

	/**
	 * The column <code>public.informacion_pago.asociacionid</code>.
	 */
	public final TableField<InformacionPagoRecord, Integer> ASOCIACIONID = createField("asociacionid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.informacion_pago.titular</code>.
	 */
	public final TableField<InformacionPagoRecord, String> TITULAR = createField("titular", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>public.informacion_pago.iban</code>.
	 */
	public final TableField<InformacionPagoRecord, String> IBAN = createField("iban", org.jooq.impl.SQLDataType.VARCHAR.length(29).nullable(false), this, "");

	/**
	 * The column <code>public.informacion_pago.precioporasociado</code>.
	 */
	public final TableField<InformacionPagoRecord, BigDecimal> PRECIOPORASOCIADO = createField("precioporasociado", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * Create a <code>public.informacion_pago</code> table reference
	 */
	public InformacionPago() {
		this("informacion_pago", null);
	}

	/**
	 * Create an aliased <code>public.informacion_pago</code> table reference
	 */
	public InformacionPago(String alias) {
		this(alias, INFORMACION_PAGO);
	}

	private InformacionPago(String alias, Table<InformacionPagoRecord> aliased) {
		this(alias, aliased, null);
	}

	private InformacionPago(String alias, Table<InformacionPagoRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<InformacionPagoRecord> getPrimaryKey() {
		return Keys.PK_INFORMACION_PAGO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<InformacionPagoRecord>> getKeys() {
		return Arrays.<UniqueKey<InformacionPagoRecord>>asList(Keys.PK_INFORMACION_PAGO);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InformacionPago as(String alias) {
		return new InformacionPago(alias, this);
	}

	/**
	 * Rename this table
	 */
	public InformacionPago rename(String name) {
		return new InformacionPago(name, null);
	}
}
