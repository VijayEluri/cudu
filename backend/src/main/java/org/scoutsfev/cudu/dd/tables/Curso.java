/**
 * This class is generated by jOOQ
 */
package org.scoutsfev.cudu.dd.tables;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.scoutsfev.cudu.dd.Keys;
import org.scoutsfev.cudu.dd.Public;
import org.scoutsfev.cudu.dd.tables.records.CursoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Curso extends TableImpl<CursoRecord> {

	private static final long serialVersionUID = 1504780780;

	/**
	 * The reference instance of <code>public.curso</code>
	 */
	public static final Curso CURSO = new Curso();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CursoRecord> getRecordType() {
		return CursoRecord.class;
	}

	/**
	 * The column <code>public.curso.id</code>.
	 */
	public final TableField<CursoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.curso.titulo</code>.
	 */
	public final TableField<CursoRecord, String> TITULO = createField("titulo", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>public.curso.fecha_inicio_inscripcion</code>.
	 */
	public final TableField<CursoRecord, Timestamp> FECHA_INICIO_INSCRIPCION = createField("fecha_inicio_inscripcion", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>public.curso.fecha_fin_inscripcion</code>.
	 */
	public final TableField<CursoRecord, Timestamp> FECHA_FIN_INSCRIPCION = createField("fecha_fin_inscripcion", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>public.curso.fecha_nacimiento_minima</code>.
	 */
	public final TableField<CursoRecord, Date> FECHA_NACIMIENTO_MINIMA = createField("fecha_nacimiento_minima", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

	/**
	 * The column <code>public.curso.plazas</code>.
	 */
	public final TableField<CursoRecord, Integer> PLAZAS = createField("plazas", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.curso.descripcion_fechas</code>.
	 */
	public final TableField<CursoRecord, String> DESCRIPCION_FECHAS = createField("descripcion_fechas", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>public.curso.descripcion_lugar</code>.
	 */
	public final TableField<CursoRecord, String> DESCRIPCION_LUGAR = createField("descripcion_lugar", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>public.curso.visible</code>.
	 */
	public final TableField<CursoRecord, Boolean> VISIBLE = createField("visible", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.curso.coordinador_id</code>.
	 */
	public final TableField<CursoRecord, Integer> COORDINADOR_ID = createField("coordinador_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>public.curso</code> table reference
	 */
	public Curso() {
		this("curso", null);
	}

	/**
	 * Create an aliased <code>public.curso</code> table reference
	 */
	public Curso(String alias) {
		this(alias, CURSO);
	}

	private Curso(String alias, Table<CursoRecord> aliased) {
		this(alias, aliased, null);
	}

	private Curso(String alias, Table<CursoRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CursoRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CURSO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CursoRecord> getPrimaryKey() {
		return Keys.PK_CURSO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CursoRecord>> getKeys() {
		return Arrays.<UniqueKey<CursoRecord>>asList(Keys.PK_CURSO);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<CursoRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<CursoRecord, ?>>asList(Keys.CURSO__FK_CURSO_COORDINADORID_ASOCIADO);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Curso as(String alias) {
		return new Curso(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Curso rename(String name) {
		return new Curso(name, null);
	}
}
